// Map
// JS -> 객체, 배열 : 많고 다양하고 복잡한 프로그램을 만들어왔다
// 그럼에도 불구하고 현실세계를 반영하기에는 많이 어려움
// 추가적인 자료구조가 등장함. (Map, Set)

// Map, Set의 목적 : 데이터의 구성, 검색, 사용을 효율적으로 처리 > 기준의 객체 또는 배열보다

// (1) Map
// Key - Value
// Key에 어떤 데이터타입(유형)도 다 들어올 수 있다.
// Map은 키가 정렬된 순서로 저장되기 때문이다.
// 기능 > 검색, 삭제, 제거, 여부 확인

const myMap = new Map();
// myMap.set('key', 'value');

//myMap.get('key')
// 반복이라는 개념이 Map에서 가장 중요하다. method : keys,values, entries

// iterator: 반복자
// 요소 하나하나를 반복할 수 있도록 배열 또는 객체와 비슷한 형태로 열거되어있는 자료구조라고 이해할 수 있음 (데이터를 조회해주는 객체라고 생각해도 될까?)
// myMap.key() 가 반환하는 값이 iterator.
